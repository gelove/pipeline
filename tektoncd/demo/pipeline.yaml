apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-image-from-git
spec:
  inputs:
    resources:
      - name: docker-source
        type: git
    params:
      - name: pathToDockerFile
        type: string
        description: The path to the dockerfile to build
        default: /workspace/docker-source/Dockerfile
      - name: pathToContext
        type: string
        description:
          The build context used by Kaniko
          (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
        default: /workspace/docker-source
  outputs:
    resources:
      - name: builtImage
        type: image
  steps:
    - name: build-and-push
      image: registry.zdns.cn/gsmlg/kaniko-project-executor:v0.13.0
      # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
      env:
        - name: "DOCKER_CONFIG"
          value: "/builder/home/.docker/"
      command:
        - /kaniko/executor
      args:
        - --dockerfile=$(inputs.params.pathToDockerFile)
        - --destination=$(outputs.resources.builtImage.url)
        - --context=$(inputs.params.pathToContext)
        - --oci-layout-path=/builder/home/image-outputs/builtImage
        - --skip-tls-verify

---

apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-zcloud
spec:
  inputs:
    resources:
      - name: docker-source
        type: git
      - name: image
        type: image
      - name: uiImage
        type: image
    params:
      - name: pathToDockerFile
        type: string
        description: The path to the dockerfile to build
        default: /workspace/docker-source/Dockerfile
      - name: pathToContext
        type: string
        description:
          The build context used by Kaniko
          (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
        default: /workspace/docker-source
  outputs:
    resources:
      - name: builtImage
        type: image
  steps:
    - name: setup-dockerfile
      image: docker.io/ubuntu:18.04
      command:
        - /workspace/docker-source/setup.sh
      args:
        - $(inputs.resources.image.url)
        - $(inputs.resources.uiImage.url)
        - /workspace/docker-source/Dockerfile
    - name: build-and-push
      image: registry.zdns.cn/gsmlg/kaniko-project-executor:v0.13.0
      # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
      env:
        - name: "DOCKER_CONFIG"
          value: "/builder/home/.docker/"
      command:
        - /kaniko/executor
      args:
        - --dockerfile=$(inputs.params.pathToDockerFile)
        - --destination=$(outputs.resources.builtImage.url)
        - --context=$(inputs.params.pathToContext)
        - --oci-layout-path=/builder/home/image-outputs/builtImage
        - --skip-tls-verify

---

apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: zcloud-build-pipeline
spec:
  resources:
    - name: singlecloud-repo
      type: git
    - name: singlecloud-ui-repo
      type: git
    - name: zcloud-repo
      type: git
    - name: singlecloud-image
      type: image
    - name: singlecloud-ui-image
      type: image
    - name: zcloud-image
      type: image
  tasks:
    - name: build-singlecloud-ui
      retries: 1
      taskRef:
        name: build-image-from-git
      resources:
        inputs:
          - name: docker-source
            resource: singlecloud-ui-repo
        outputs:
          - name: builtImage
            resource: singlecloud-ui-image
    - name: build-singlecloud
      taskRef:
        name: build-image-from-git
      resources:
        inputs:
          - name: docker-source
            resource: singlecloud-repo
        outputs:
          - name: builtImage
            resource: singlecloud-image
    - name: build-zcloud
      taskRef:
        name: build-zcloud
      resources:
        inputs:
        - name: docker-source
          resource: zcloud-repo
        - name: uiImage
          resource: singlecloud-ui-image
          from:
          - build-singlecloud-ui
        - name: image
          resource: singlecloud-image
          from:
          - build-singlecloud
        outputs:
        - name: builtImage
          resource: zcloud-image

